<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzx.xzxms.inquiry.dao.extend.InquiryExtendMapper">

    <select id="findByProIdOrCompareStatus" resultType="com.xzx.xzxms.inquiry.bean.extend.InquiryAndProDetailExtend">
        SELECT i.*,s.pro_rate rate from inquiry i
        left join sys_pro_detail s on i.pro_detail_id = s.id
        WHERE
        i.id IN (
            select i.id
            from inquiry i
            left join sys_pro_detail s on i.pro_detail_id = s.id
            left join quote q on i.id = q.inquiry_id
            left join sys_pro_check c on q.id = c.quote_id
            <where>
                i.is_active = 1 and s.is_active = 1 AND q.is_active = 1
                <if test="proDetailId != -1">
                    and s.id = #{proDetailId}
                </if>
                <if test="compare_audit != -1">
                    and c.compare_audit = #{compare_audit}
                </if>
            </where>
            GROUP BY i.sort
        )

        <!--select i.*,s.pro_rate rate
            from inquiry i
            left join sys_pro_detail s on i.pro_detail_id = s.id
            left join quote q on i.id = q.inquiry_id
            left join sys_pro_check c on q.id = c.quote_id
        <where>
            i.is_active = 1 and s.is_active = 1 and
            c.business_audit != 0 and c.technical_audit != 0
            <if test="proDetailId != -1">
                and s.id = #{proDetailId}
            </if>
            <if test="compare_audit != -1">
                and c.compare_audit = #{compare_audit}
            </if>
        </where>-->
    </select>
    <select id="findByProIdOrCompareStatus_old" resultMap="compareResultMap">
        select
        i.*,pro.pro_rate rate
        from inquiry i
        left join sys_pro_detail pro on i.pro_detail_id = pro.id
        left join quote q on i.id=q.inquiry_id
        left join sys_pro_check spc on spc.content_id=q.id,
		(
		  SELECT count(1) num
			from inquiry i
            left join sys_pro_detail pro on i.pro_detail_id = pro.id
            left join quote q on i.id=q.inquiry_id
            left join sys_pro_check spc on q.id = spc.content_id
            where
                spc.check_status = 0 and spc.type != "最终审核" and spc.type != "比价审核"
        ) a
        <where>
            i.is_active = 1 and q.is_active =1 and a.num = 0
            <if test="proDetailId != -1">
                and pro.id = #{proDetailId,jdbcType=BIGINT}
            </if>
            <if test="compareStatus!=null and compareStatus!=-1">
                and spc.type="比价审核"
                <if test="compareStatus == 0">
                    and  spc.check_status = 0
                </if>
                <if test="compareStatus != 0">
                    and spc.check_status != 0
                </if>
            </if>
        </where>
        GROUP BY i.id
    </select>
    <select id="findByProIdOrCompareStatusToEquals" resultMap="compareResultMap">
        select
        i.id, i.name, i.params,i.number,i.price,i.total_price, i.pro_detail_id,
        che.type che_type,che.check_status che_check_status
        from inquiry i
        left join sys_pro_detail pro on i.pro_detail_id = pro.id
        left join quote q on i.id=q.inquiry_id
        left join sys_pro_check che on q.id = che.quote_id
        <where>
            i.is_active = 1 and pro.is_active = 1 and q.is_active = 1
            <if test="proDetailId != -1 and proDetailId != null">
                and pro.id = #{proDetailId,jdbcType=BIGINT}
            </if>
            <if test="compareStatus != 0 and compareStatus != null">
                and che.check_status != 0
            </if>
        </where>
        GROUP BY i.id, i.name, i.params,i.number,i.price,i.total_price, i.pro_detail_id,
        che.type,che.check_status
    </select>
    <resultMap id="compareResultMap" type="com.xzx.xzxms.inquiry.bean.extend.InquiryCompareExtend" extends="com.xzx.xzxms.inquiry.dao.InquiryMapper.BaseResultMap">
    </resultMap>
    <select id="findInquiryAndQuoteNum" resultMap="FindInquiryAndQuoteNumMap">
        SELECT
         b.*, j.name parent_id,
        count(if(q.id is not null, true, null)) quote_num, dev.name device_model
        from
        inquiry b
        LEFT JOIN inquiry j ON b.parent_id = j.id
        LEFT JOIN quote q ON q.inquiry_id = b.id
        LEFT JOIN sys_device_type dev on b.device_type_id = dev.id

        <where>
        b.is_active = 1 and (b.parent_id is null or b.parent_id != -1)
            <if test="proDetailId != -1 and proDetailId != null">
                and b.pro_detail_id = #{proDetailId,jdbcType=BIGINT}
            </if>
            <if test="name != '' and name != null">
                and b.name like CONCAT(CONCAT('%',#{name}),'%')
            </if>
            <if test="model != '' and model != null">
                and b.model like CONCAT(CONCAT('%',#{model}),'%')
            </if>
        </where>
        GROUP BY
        b.id
        order by b.sort
    </select>
    <resultMap id="FindInquiryAndQuoteNumMap" type="com.xzx.xzxms.inquiry.bean.extend.InquiryExtend" extends="com.xzx.xzxms.inquiry.dao.InquiryMapper.BaseResultMap">
        <result column="quote_num" jdbcType="VARCHAR" property="quoteNum" />
        <result column="device_model" jdbcType="VARCHAR" property="deviceModel"/>
        <association property="poolNum" column="id" select="selectById"></association>
        <association property="refuseNum" column="id" select="selectRefuseNumById"></association>
    </resultMap>
    <select id="selectById" resultType="int">
      select
        count(1)
      from
        inquiry i left join quote q on i.id = q.inquiry_id
      where
        q.data_source = 0 and q.is_active = 1
      and
        i.id = #{id}
    </select>
    <select id="selectRefuseNumById" resultType="int">
      select
        count(1)
      from
        inquiry i
        left join quote q on i.id = q.inquiry_id
        left join sys_pro_check spc on q.id = spc.quote_id
      where
        (spc.technical_audit = 2 or spc.business_audit = 2)  and q.is_active = 1
      and
        i.id = #{id}
    </select>
    <select id="findInquiryByProId" resultType="com.xzx.xzxms.inquiry.vm.InquiryVM">
        select i.*, count(if(spc.compare_audit = 0,true,null)) unCompareNum,
        count(if(spc.compare_audit is NULL,true,null)) unSendNum
        from inquiry i
        left join quote q on i.id = q.inquiry_id
        left join sys_pro_check spc on q.id = spc.quote_id
        where pro_detail_id = #{proDetailId} and i.is_active = 1
        and q.is_active = 1
        group by i.id
    </select>
    <!--<resultMap id="InquiryCompareNumMap" type="com.xzx.xzxms.inquiry.vm.InquiryVM" extends="com.xzx.xzxms.inquiry.dao.InquiryMapper.BaseResultMap">
        <association property="unCompareNum" column="id" select="findCompareNumByInquiryId"></association>
    </resultMap>
    <select id="findCompareNumByInquiryId" resultType="int">
        select count(1) from quote q left join sys_pro_check spc on q.id = spc.quote_id
        where q.inquiry_id = #{id} and q.is_active = 1 and (spc.compare_audit = 0 or spc.compare_audit is NULL)
    </select>-->

    <select id="findInquiryAndQuote" resultMap="quoteList">
        select i.*,
        q.id q_id,q.image q_image, ss.supplier q_supplier, q.su_delivery q_su_delivery,q.su_model q_su_model,q.su_params q_su_params,q.su_brand q_su_brand,
        q.su_price q_su_price,q.su_total_price q_su_total_price,q.warranty q_warranty,q.data_source q_data_source,q.su_remark q_su_remark
        from inquiry i
        left join quote q on i.id = q.inquiry_id
        left join supply_supplier ss on ss.id = q.supplier_id
        <where>
            i.is_active = 1 and q.is_active = 1
            <if test="proDetailId != null">
                and i.pro_detail_id = #{proDetailId}
            </if>
        </where>
    </select>
    <resultMap id="quoteList" type="com.xzx.xzxms.inquiry.vo.InquiryAndQuoteVO" extends="com.xzx.xzxms.inquiry.dao.InquiryMapper.BaseResultMap">
        <collection property="quotes" javaType="com.xzx.xzxms.inquiry.bean.Quote" autoMapping="true" columnPrefix="q_" />
    </resultMap>
</mapper>