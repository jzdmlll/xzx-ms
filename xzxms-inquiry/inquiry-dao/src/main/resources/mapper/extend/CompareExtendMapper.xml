<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzx.xzxms.inquiry.dao.extend.CompareExtendMapper">
    <!--<select id="cascadeFindAll" resultType="com.xzx.xzxms.inquiry.vm.InquiryCompareVM">
      select
        i.name, i.params, i.pro_detail_id pro_detailId,spc.check_status,sum(spc.check_status) checknum, count(i.id)/3 inquirynum
      from
        inquiry i
      right join compare c on c.inquiry_id = i.id
      left join sys_pro_check spc on spc.content_id = i.id
      <where>
          spc.type=0 and i.final_check = 0
        <if test="compareStatus!=null and compareStatus!=-1">
            <if test="compareStatus == 0">
              and  c.status = 0
            </if>
            <if test="compareStatus != 0">
              and c.status != 0
            </if>
        </if>
        <if test="proDetailId!=null and proDetailId!=-1">
            and i.pro_detail_id = #{proDetailId,jdbcType=INTEGER}
        </if>
      </where>
        group by i.name , i.params, i.pro_detail_id HAVING checknum/inquirynum = 2
    </select>
-->
    <select id="cascadeFindAllByParams" resultType="com.xzx.xzxms.inquiry.vm.QuoteRespVM">
        select
        q.*, spc.id compare_id,
        spc.technical_audit technical_audit,spc.technical_remark technical_remark,
        spc.business_audit business_audit,spc.business_remark business_remark,
        spc.compare_audit compare_status,spc.compare_remark compare_remark,
        spc.finally_audit finally_audit,spc.finally_remark finally_remark,
        spc.id compare_id,
        i.name name
        from
        inquiry i LEFT JOIN quote q ON i.id = q.inquiry_id
        LEFT JOIN sys_pro_detail spd ON i.pro_detail_id = spd.id
        LEFT JOIN sys_pro_check spc ON q.id = spc.quote_id
      <where>
          q.is_active = 1 and i.is_active = 1
          and i.id = #{inquiryId,jdbcType=BIGINT}
      </where>
        order by spc.quote_id
    </select>

<!--    id i_id,i.name i_name,i,code i_code,i.real_brand i_real_brand,i.brand i_brand,i.params i_params,i.model i_model,i.unit i_unit,i.number i_number,i.total_price i_total_price-->
    <select id="findQuoteListByInquiry" resultMap="compareInquiry">
        select i.*
        from inquiry i where i.is_active = 1 and i.id in
        <foreach collection="inquiryIds" item="inquiryId" index="index" open = "(" close = ")" separator=",">
            #{inquiryId}
        </foreach>
    </select>
    <resultMap id="compareInquiry" type="com.xzx.xzxms.inquiry.vm.CompareQuoteListVM">
        <association property="inquiry" javaType="com.xzx.xzxms.inquiry.bean.Inquiry" autoMapping="true" columnPrefix=""></association>
        <collection property="quotes" column="id" select="cascadeFindAllByParams"/>
    </resultMap>

    <!--<select id="findQuote" resultType="com.xzx.xzxms.inquiry.bean.Quote">
        select * from quote where is_active = 1 and inquiry_id = #{id}
    </select>-->

    <select id="findCompareResult" resultType="com.xzx.xzxms.inquiry.bean.Quote">
        select * from quote q
            left join inquiry i on i.id = q.inquiry_id
            left join sys_pro_check che on q.id = che.quote_id
        <where>
            q.is_active = 1 and i.is_active = 1 and che.compare_audit = 1
            and i.id = #{inquiryId,jdbcType=BIGINT}
        </where>
    </select>
</mapper>